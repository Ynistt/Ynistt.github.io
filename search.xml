<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>hadoop安装</title>
      <link href="/lzl/dc6256c8.html"/>
      <url>/lzl/dc6256c8.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="一、hadoop安装模式"><a href="#一、hadoop安装模式" class="headerlink" title="一、hadoop安装模式"></a>一、hadoop安装模式</h1><p>1、单机模式</p><p>2、完全分布式模式</p><p>3、伪分布式模式</p><h1 id="二、单机版安装"><a href="#二、单机版安装" class="headerlink" title="二、单机版安装"></a>二、单机版安装</h1><h2 id="1、下载hadoop"><a href="#1、下载hadoop" class="headerlink" title="1、下载hadoop"></a>1、下载hadoop</h2><p><a href="https://hadoop.apache.org/releases.html">https://hadoop.apache.org/releases.html</a></p><h2 id="2、用xshell连接上虚拟机，利用rz工具上传到linux，并解压"><a href="#2、用xshell连接上虚拟机，利用rz工具上传到linux，并解压" class="headerlink" title="2、用xshell连接上虚拟机，利用rz工具上传到linux，并解压"></a>2、用xshell连接上虚拟机，利用rz工具上传到linux，并解压</h2><p>[root@localhost hadoop-3.3.2]# tar -xzvf hadoop-3.3.2.tar.gz -C &#x2F;opt&#x2F;</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -xzvf hadoop-3.3.2.tar.gz -C /opt/</span><br></pre></td></tr></table></figure><h2 id="3、利用hadoop-version-查看是否安装成功"><a href="#3、利用hadoop-version-查看是否安装成功" class="headerlink" title="3、利用hadoop version 查看是否安装成功"></a>3、利用hadoop version 查看是否安装成功</h2><p>[root@localhost hadoop-3.3.2]# bin&#x2F;hadoop version</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bin/hadoop version</span><br></pre></td></tr></table></figure><p><strong>此时报错：****ERROR: JAVA_HOME is not set and could not be found.</strong></p><p>解决方案：安装jdk并设置JAVA_HOME</p><ul><li><p>安装jdk</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install java-1.8.0-openjdk-devel.x86_64 -y</span><br></pre></td></tr></table></figure></li><li><p>设置JAVA_HOME</p><p>  (1)  </p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim ~/.bashrc</span><br></pre></td></tr></table></figure><p>  (2) 末尾添加一行，并保存退出</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export JAVA_HOME=/usr</span><br></pre></td></tr></table></figure><p>  (3) 利用命令让配置立即生效</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source ~/.bashrc</span><br></pre></td></tr></table></figure><p>  修改完毕后运行命令，可以看到hadoop的版本信息</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bin/hadoop version</span><br></pre></td></tr></table></figure></li></ul><h1 id="三、单词版测试词频统计"><a href="#三、单词版测试词频统计" class="headerlink" title="三、单词版测试词频统计"></a>三、单词版测试词频统计</h1><p>1、建立input文件夹，里面放入文件，并写入单词</p><p>2、运行hadoop自带的程序，实现统计。</p><p>bin&#x2F;hadoop jar &#x2F;opt&#x2F;hadoop-3.3.2&#x2F;share&#x2F;hadoop&#x2F;mapreduce&#x2F;hadoop-mapreduce-examples-</p><p>3.3.2.jar wordcount input output</p><p>3、到output下查看运算结果。</p><h1 id="四、完全分布式模式安装"><a href="#四、完全分布式模式安装" class="headerlink" title="四、完全分布式模式安装"></a>四、完全分布式模式安装</h1><h2 id="4-1-单机准备"><a href="#4-1-单机准备" class="headerlink" title="4.1 单机准备"></a>4.1 单机准备</h2><p>准备一台已经安装了单机版hadoop的机器进行操作——hadoop201</p><h3 id="4-1-1-关闭防火墙——保证内网集群的通讯"><a href="#4-1-1-关闭防火墙——保证内网集群的通讯" class="headerlink" title="4.1.1 关闭防火墙——保证内网集群的通讯"></a>4.1.1 关闭防火墙——保证内网集群的通讯</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# systemctl stop firewalld.service # 关闭防火墙</span><br><span class="line">[root@localhost ~]# systemctl status firewalld.service # 查看状态--dead</span><br><span class="line">[root@localhost ~]# systemctl disable firewalld.service # 禁止开机启动</span><br></pre></td></tr></table></figure><h3 id="4-1-2-设置静态IP——固定IP地址"><a href="#4-1-2-设置静态IP——固定IP地址" class="headerlink" title="4.1.2 设置静态IP——固定IP地址"></a>4.1.2 设置静态IP——固定IP地址</h3><p>（1）利用vim，修改网络配置文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# vim /etc/sysconfig/network-scripts/ifcfg-ens33</span><br></pre></td></tr></table></figure><p>（2）修改结果</p><p><img src="https://img.ynistt.top/blogPic/image-20221017194509670.png" alt="image-20221017194509670"></p><p>87位置的数要看虚拟网络编辑器vm8中查看</p><p>（3）设置域名——方便记忆和访问</p><ol><li><p>修改 &#x2F;etc&#x2F;hosts文件，</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc</span><br></pre></td></tr></table></figure><p> 末尾添加一行：</p><p> 192.168.87.201hadoop201</p></li><li><p>修改 &#x2F;etc&#x2F;hostname 文件，清空文件</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/hostname</span><br></pre></td></tr></table></figure><p> 末尾添加：</p><p> 192.168.87.201hadoop201</p></li><li><p>修改C:\Windows\System32\drivers\etc\hosts文件，末尾添加：</p><p> 192.168.87.201 hadoop201</p></li></ol><p>到此，可以用hadoop201 来作为主机名连接xshell 和 linux</p><h2 id="4-2-三机互联"><a href="#4-2-三机互联" class="headerlink" title="4.2 三机互联"></a>4.2 三机互联</h2><p>1、从hadoop201中拷贝出另外2台机器，分别为hadoop202，hadoop203。</p><p>2、修改静态IP分别为202和203。</p><p>3、设置域名为202和203。</p><p>最终，&#x2F;etc&#x2F;hosts 和 windows的hosts，都要有以下3行：</p><p>192.168.87.201 hadoop201</p><p>192.168.87.202 hadoop202</p><p>192.168.87.203 hadoop203</p><p>最终效果体现：</p><ol><li>xshell能利用 域名hadoopxxx 连接3台机器</li><li>3台机器能通过 域名hadoopxxx 互相ping 通</li></ol>]]></content>
      
      
      <categories>
          
          <category> 大数据 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大数据 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Thymeleaf简介及常用语法</title>
      <link href="/lzl/7a6bc137.html"/>
      <url>/lzl/7a6bc137.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="一、Thymeleaf简介"><a href="#一、Thymeleaf简介" class="headerlink" title="一、Thymeleaf简介"></a>一、Thymeleaf简介</h1><p>​Thymeleaf 是新一代 Java 模板引擎，与 Velocity、FreeMarker 等传统 Java 模板引擎不同，Thymeleaf 支持 HTML 原型，也就是文件名后缀为.html的文件，因此它可以直接被浏览器打开，此时浏览器会忽略未定义的 Thymeleaf 标签属性，展示 thymeleaf 模板的静态页面效果；当通过 Web 应用程序访问时，Thymeleaf 会动态地替换掉静态内容，使页面动态显示。</p><h1 id="二、Thymeleaf的特点"><a href="#二、Thymeleaf的特点" class="headerlink" title="二、Thymeleaf的特点"></a>二、Thymeleaf的特点</h1><ul><li>动静结合：Thymeleaf 既可以直接使用浏览器打开，查看页面的静态效果，也可以通过 Web 应用程序进行访问，查看动态页面效果。</li><li>开箱即用：Thymeleaf 提供了 Spring 标准方言以及一个与 SpringMVC 完美集成的可选模块，可以快速的实现表单绑定、属性编辑器、国际化等功能。</li><li>多方言支持：它提供了 Thymeleaf 标准和 Spring 标准两种方言，可以直接套用模板实现 JSTL、 OGNL 表达式；必要时，开发人员也可以扩展和创建自定义的方言。</li><li>与 SpringBoot 完美整合：SpringBoot 为 Thymeleaf 提供了的默认配置，并且还为 Thymeleaf 设置了视图解析器，因此 Thymeleaf 可以与 Spring Boot 完美整合。</li></ul><h1 id="三、Thymeleaf的常用语法"><a href="#三、Thymeleaf的常用语法" class="headerlink" title="三、Thymeleaf的常用语法"></a>三、Thymeleaf的常用语法</h1><p>在使用 Thymeleaf之前，首先要在页面的 html 标签中声明名称空间，代码如下</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span> <span class="attr">xmlns:th</span>=<span class="string">&quot;http://www.thymeleaf.org&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>不声明也不影响Thymeleaf的使用，但避免编辑器出现 html 验证错误，最好声明</p><p>Thymeleaf 语法分为以下 2 类：1.标准表达式语法  2.th 属性</p><h2 id="3-1-标准表达式语法"><a href="#3-1-标准表达式语法" class="headerlink" title="3.1 标准表达式语法"></a>3.1 标准表达式语法</h2><ul><li>变量表达式：${…}</li><li>选择变量表达式：*{…}</li><li>链接表达式：@{…}</li><li>国际化表达式：#{…}</li><li>片段引用表达式：~{…}</li></ul><h3 id="3-1-1-变量表达式：-…"><a href="#3-1-1-变量表达式：-…" class="headerlink" title="3.1.1 变量表达式：${…}"></a>3.1.1 变量表达式：${…}</h3><ul><li><p>获取对象的属性和方法</p><p>  例如获取学生的姓名</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$&#123;student.name&#125;</span><br></pre></td></tr></table></figure></li><li><p>使用内置的基本对象</p><p>  获取请求域、session域等值</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$&#123;session.msg&#125;</span><br></pre></td></tr></table></figure></li><li><p>使用内置的工具对象</p><p>  strings：字符串工具对象，常用方法有：equals、equalsIgnoreCase、length、trim、toUpperCase、toLowerCase、indexOf、substring、replace、startsWith、endsWith，contains 和 containsIgnoreCase 等；</p><p>  numbers：数字工具对象，常用的方法有：formatDecimal 等；</p><p>  bools：布尔工具对象，常用的方法有：isTrue 和 isFalse 等；</p><p>  arrays：数组工具对象，常用的方法有：toArray、length、isEmpty、contains 和 containsAll 等；</p><p>  lists&#x2F;sets：List&#x2F;Set 集合工具对象，常用的方法有：toList、size、isEmpty、contains、containsAll 和 sort 等；</p><p>  maps：Map 集合工具对象，常用的方法有：size、isEmpty、containsKey 和 containsValue 等；</p><p>  dates：日期工具对象，常用的方法有：format、year、month、hour 和 createNow 等。</p></li></ul><h3 id="3-1-2选择变量表达式：-…"><a href="#3-1-2选择变量表达式：-…" class="headerlink" title="3.1.2选择变量表达式：*{…}"></a>3.1.2选择变量表达式：*{…}</h3><p>与 th:object 的配合使用。</p><p>当使用 th:object 存储一个对象后，使用选择变量表达式（*{…}）获取该对象中的属性，其中，* *即代表该对象。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">th:object</span>=<span class="string">&quot;$&#123;session.student&#125;&quot;</span> &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">&quot;*&#123;name&#125;&quot;</span>&gt;</span>name<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="3-1-3链接表达式：-…"><a href="#3-1-3链接表达式：-…" class="headerlink" title="3.1.3链接表达式：@{…}"></a>3.1.3链接表达式：@{…}</h3><p>有参链接</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;blog/&#123;id&#125;(id=$&#123;blog.id&#125;)&#125;&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>无参链接</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;../static/css/me.css&quot;</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/css/me.css&#125;&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="3-1-4国际化表达式：-…"><a href="#3-1-4国际化表达式：-…" class="headerlink" title="3.1.4国际化表达式：#{…}"></a>3.1.4国际化表达式：#{…}</h3><p>获取国际化等值</p><h3 id="3-1-5片段引用表达式：-…"><a href="#3-1-5片段引用表达式：-…" class="headerlink" title="3.1.5片段引用表达式：~{…}"></a>3.1.5片段引用表达式：~{…}</h3><p>用于引入公共片段</p><h2 id="3-2-th-属性"><a href="#3-2-th-属性" class="headerlink" title="3.2 th 属性"></a>3.2 th 属性</h2><p>Thymeleaf 提供了大量的 th 属性，这些属性可以直接在 HTML 标签中使用。</p><h3 id="3-2-1-th-id"><a href="#3-2-1-th-id" class="headerlink" title="3.2.1 th:id"></a>3.2.1 th:id</h3><p>替换 HTML 的 id 属性</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span>  <span class="attr">id</span>=<span class="string">&quot;html-id&quot;</span>  <span class="attr">th:id</span>=<span class="string">&quot;thymeleaf-id&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><h3 id="3-2-2-th-text"><a href="#3-2-2-th-text" class="headerlink" title="3.2.2 th:text"></a>3.2.2 th:text</h3><p>文本替换，转义特殊字符</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;m-text&quot;</span> <span class="attr">th:text</span>=<span class="string">&quot;Thymeleaf&quot;</span>&gt;</span>html<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;m-text&quot;</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;student.name&#125;&quot;</span>&gt;</span>html<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="3-2-3-th-utext"><a href="#3-2-3-th-utext" class="headerlink" title="3.2.3 th:utext"></a>3.2.3 th:utext</h3><p>文本替换，不转义特殊字符</p><h3 id="3-2-4-th-object"><a href="#3-2-4-th-object" class="headerlink" title="3.2.4 th:object"></a>3.2.4 th:object</h3><p>在父标签选择对象，子标签使用 *{…} 选择表达式选取值。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">th:object</span>=<span class="string">&quot;$&#123;session.student&#125;&quot;</span> &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">&quot;*&#123;name&#125;&quot;</span>&gt;</span>name<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="3-2-5-th-value"><a href="#3-2-5-th-value" class="headerlink" title="3.2.5 th:value"></a>3.2.5 th:value</h3><p>替换html标签中value的值</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;hidden&quot;</span> <span class="attr">name</span>=<span class="string">&quot;blogId&quot;</span> <span class="attr">th:value</span>=<span class="string">&quot;$&#123;blog.id&#125;&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="3-2-6-th-style"><a href="#3-2-6-th-style" class="headerlink" title="3.2.6 th:style"></a>3.2.6 th:style</h3><p>设置样式</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">th:style</span>=<span class="string">&quot;&#x27;color:#F00; font-weight:bold&#x27;&quot;</span>&gt;</span>www.baidu.com<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="3-2-7-th-onclick"><a href="#3-2-7-th-onclick" class="headerlink" title="3.2.7 th:onclick"></a>3.2.7 th:onclick</h3><p>设置点击事件</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">th:onclick</span> = <span class="string">&quot;&#x27;getInfo()&#x27;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="3-2-8-th-each"><a href="#3-2-8-th-each" class="headerlink" title="3.2.8 th:each"></a>3.2.8 th:each</h3><p>遍历数据</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">th:each</span>=<span class="string">&quot;blog : $&#123;blogs&#125;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;blog/&#123;id&#125;(id=$&#123;blog.id&#125;)&#125;&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;mini teal circle icon&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;blog.title&#125;&quot;</span>&gt;</span>标题<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;ui teal basic left pointing label m-padded-mini &quot;</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;#dates.format(blog.createTime,&#x27;yyyy-MM-dd&#x27;)&#125;&quot;</span>&gt;</span>9.1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="3-2-9-th-if"><a href="#3-2-9-th-if" class="headerlink" title="3.2.9 th:if"></a>3.2.9 th:if</h3><p>根据条件判断是否需要展示此标签</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">th:if</span>=<span class="string">&quot;$&#123;blog.comment&#125;&quot;</span>&gt;</span></span><br><span class="line">   如果blog.comment为真则显示此信息</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="3-2-10-th-unless"><a href="#3-2-10-th-unless" class="headerlink" title="3.2.10 th:unless"></a>3.2.10 th:unless</h3><p>与th:if 条件相反</p><h3 id="3-2-11-th-switch"><a href="#3-2-11-th-switch" class="headerlink" title="3.2.11 th:switch"></a>3.2.11 th:switch</h3><p>与java类似 配合th:case 使用</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">th:switch</span>=<span class="string">&quot;$&#123;name&#125;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">th:case</span>=<span class="string">&quot;zhangsan&quot;</span>&gt;</span>zhangsan<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">th:case</span>=<span class="string">&quot;lisi&quot;</span>&gt;</span>lisi<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="3-2-11-th-fragment"><a href="#3-2-11-th-fragment" class="headerlink" title="3.2.11 th:fragment"></a>3.2.11 th:fragment</h3><p>抽取公共模板</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span> <span class="attr">th:fragment</span>=<span class="string">&quot;head(title)&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span> <span class="attr">th:replace</span>=<span class="string">&quot;$&#123;title&#125;&quot;</span>&gt;</span>博客<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://cdn.jsdelivr.net/semantic-ui/2.2.4/semantic.min.css&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="3-2-12-th-insert"><a href="#3-2-12-th-insert" class="headerlink" title="3.2.12 th:insert"></a>3.2.12 th:insert</h3><p>将th:fragment 的模板片段插入到标签中</p><p>插入后可能会出现两个head标签</p><p>common为模板名，head为片段名</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span> <span class="attr">th:insert</span>=<span class="string">&quot;common :: head(~&#123;::title&#125;)&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://cdn.jsdelivr.net/semantic-ui/2.2.4/semantic.min.css&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;../static/css/me.css&quot;</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;css/me.css&#125;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="3-2-13-th-replace"><a href="#3-2-13-th-replace" class="headerlink" title="3.2.13 th:replace"></a>3.2.13 th:replace</h3><p>将th:fragment 的模板片段替换到标签中(推荐)</p><p>common为模板名，head为片段名</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span> <span class="attr">th:replace</span>=<span class="string">&quot;common :: head(~&#123;::title&#125;)&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://cdn.jsdelivr.net/semantic-ui/2.2.4/semantic.min.css&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;../static/css/me.css&quot;</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;css/me.css&#125;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="3-2-14-th-include"><a href="#3-2-14-th-include" class="headerlink" title="3.2.14 th:include"></a>3.2.14 th:include</h3><p>用指定片段的标签体内容(不包含标签本身)来作为当前该标签的标签体内容</p><h3 id="3-2-15-th-src"><a href="#3-2-15-th-src" class="headerlink" title="3.2.15 th:src"></a>3.2.15 th:src</h3><p>替换 HTML 中的 src 属性</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;ui wechat-qr flowing popup transition hidden&quot;</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;../static/images/wechat.jpg&quot;</span> <span class="attr">th:src</span>=<span class="string">&quot;@&#123;/images/wechat.jpg&#125;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="3-2-16-th-inline"><a href="#3-2-16-th-inline" class="headerlink" title="3.2.16 th:inline"></a>3.2.16 th:inline</h3><p>内联属性；<br>该属性有 text、none、javascript 三种取值，<br>在 script 标签中使用时，js 代码中可以获取到后台传递页面的对象。</p><h3 id="3-2-17-th-action"><a href="#3-2-17-th-action" class="headerlink" title="3.2.17 th:action"></a>3.2.17 th:action</h3><p>替换表单提交地址</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">class</span>=<span class="string">&quot;ui large form&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span> <span class="attr">action</span>=<span class="string">&quot;#&quot;</span> <span class="attr">th:action</span>=<span class="string">&quot;@&#123;/admin/login&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Thymeleaf </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Thymeleaf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Centos7配置阿里云yum源</title>
      <link href="/lzl/8949c6b7.html"/>
      <url>/lzl/8949c6b7.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="一、打开centos的yum文件夹"><a href="#一、打开centos的yum文件夹" class="headerlink" title="一、打开centos的yum文件夹"></a>一、打开centos的yum文件夹</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /etc/yum.repos.d/</span><br></pre></td></tr></table></figure><h1 id="二、用wget下载repo文件"><a href="#二、用wget下载repo文件" class="headerlink" title="二、用wget下载repo文件"></a>二、用wget下载repo文件</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget http://mirrors.aliyun.com/repo/Centos-7.repo</span><br></pre></td></tr></table></figure><h1 id="三、备份系统原来的repo文件"><a href="#三、备份系统原来的repo文件" class="headerlink" title="三、备份系统原来的repo文件"></a>三、备份系统原来的repo文件</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mv CentOS-Base.repo CentOS-Base.repo.bak</span><br></pre></td></tr></table></figure><h1 id="四、替换系统原理的repo文件"><a href="#四、替换系统原理的repo文件" class="headerlink" title="四、替换系统原理的repo文件"></a>四、替换系统原理的repo文件</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mv Centos-7.repo CentOS-Base.repo</span><br></pre></td></tr></table></figure><h1 id="五、执行yum源更新命令"><a href="#五、执行yum源更新命令" class="headerlink" title="五、执行yum源更新命令"></a>五、执行yum源更新命令</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum clean all</span><br><span class="line">yum makecache</span><br><span class="line">yum update</span><br></pre></td></tr></table></figure><h1 id="六、安装epel-release"><a href="#六、安装epel-release" class="headerlink" title="六、安装epel-release"></a>六、安装epel-release</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install epel-release</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 大数据 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux简介及常用命令</title>
      <link href="/lzl/3f9ae20c.html"/>
      <url>/lzl/3f9ae20c.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="一、linux系统简介"><a href="#一、linux系统简介" class="headerlink" title="一、linux系统简介"></a>一、linux系统简介</h1><h2 id="1-1-与Windows区别"><a href="#1-1-与Windows区别" class="headerlink" title="1.1 与Windows区别"></a>1.1 与Windows区别</h2><ul><li>一切皆文件</li><li>文件无后缀</li><li>文件名&#x2F;目录名区分大小写</li><li>没盘符，通过树形结构展示文件系统</li></ul><h2 id="1-2-常见目录"><a href="#1-2-常见目录" class="headerlink" title="1.2 常见目录"></a>1.2 常见目录</h2><p>家目录&#x2F;home : 账号登入后，开启终端的默认工作目录。 root在 &#x2F;root 中 其他账户在&#x2F;home里</p><p>根目录 &#x2F; ： 代表所有目录的源入口</p><p>&#x2F;bin : 存放二进制可执行文件(ls、cat、mkdir 等)，常用命令一般都在这里</p><p>&#x2F;etc : 存放系统管理和配置文件</p><p>&#x2F;usr : 存放应用程序</p><p>&#x2F;pot : 存放应用程序安装包</p><p>&#x2F;proc : 虚拟文件系统目录，是内存的映射，可以通过此目录访问系统信息 </p><p>&#x2F;sbin : 存放二进制可执行文件，只有root可以访问，存放系统管理员的相关配置文件 eg:ifconfig </p><p>&#x2F;dev : 存放设备文件</p><p>&#x2F;mnt : 管理员安装临时文件安装点，获得临时挂载</p><p>&#x2F;boot : 存放用于系统引导时使用的各种文件</p><p>&#x2F;lib : 存放运行相关的库文件</p><p>&#x2F;tmp : 存放各种临时文件，是公用的临时文件存储点</p><p>&#x2F;var : 存放运行时需要改变数据的文件</p><p>&#x2F;lost+found : 这个目录平时为空的</p><h1 id="二、linux常见命令"><a href="#二、linux常见命令" class="headerlink" title="二、linux常见命令"></a>二、linux常见命令</h1><h2 id="2-1-pwd"><a href="#2-1-pwd" class="headerlink" title="2.1 pwd"></a>2.1 pwd</h2><p>显示当前的工作目录的绝对路径</p><h2 id="2-2-ls"><a href="#2-2-ls" class="headerlink" title="2.2 ls"></a>2.2 ls</h2><p>列出目录的内容，基本格式： ls [选项] [目录] </p><p>ls ： 列出当前目录的内容</p><p>ls &#x2F;dev&#x2F; ： 列出 &#x2F;dev下的内容</p><p>ls -l ： 列出目录中文件的详细内容</p><p>ls -l &#x2F;etc&#x2F; ： 列出&#x2F;etc下文件的详细信息</p><h2 id="2-3-mkdir"><a href="#2-3-mkdir" class="headerlink" title="2.3 mkdir"></a>2.3 mkdir</h2><p>创建目录，如果要创建多级目录，加-p选项</p><p>[root@localhost ~]# mkdir xinguan </p><p>[root@localhost ~]# mkdir -p a&#x2F;b </p><h2 id="2-4-touch"><a href="#2-4-touch" class="headerlink" title="2.4 touch"></a>2.4 touch</h2><p>创建文件</p><p>[root@localhost ~]# touch 2.txt </p><p>[root@localhost ~]# touch {1..10}.doc </p><h2 id="2-5-cd"><a href="#2-5-cd" class="headerlink" title="2.5 cd"></a>2.5 cd</h2><p>切换目录</p><p>[root@localhost ~]# cd a 进入当前目录下的a文件夹</p><p>[root@localhost a]# cd ..&#x2F;xinguan&#x2F; 退出当前目录后进入xinguan文件夹</p><p>[root@localhost ~]# cd &#x2F;root&#x2F;xinguan&#x2F; 以绝对路径的方式进入&#x2F;root&#x2F;xinguan目录下</p><h2 id="2-6-cp"><a href="#2-6-cp" class="headerlink" title="2.6 cp"></a>2.6 cp</h2><p>复制文件或者目录</p><p>[root@localhost xinguan]# cp 333 ..&#x2F;a </p><h2 id="2-7-mv"><a href="#2-7-mv" class="headerlink" title="2.7 mv"></a>2.7 mv</h2><p>剪切，即移动</p><p>[root@localhost xinguan]# mv ..&#x2F;a&#x2F;222 .&#x2F; （.&#x2F;代表当前目录）</p><h2 id="2-8-rm"><a href="#2-8-rm" class="headerlink" title="2.8 rm"></a>2.8 rm</h2><p>删除文件或者目录</p><p>[root@localhost ~]# rm -rf 23.txt    删除23.txt </p><p>[root@localhost ~]# rm -rf *.txt      删除后缀为txt的所有文件</p><h2 id="2-9-sudo-其他命令"><a href="#2-9-sudo-其他命令" class="headerlink" title="2.9 sudo + 其他命令"></a>2.9 sudo + 其他命令</h2><p>以管理员的身份执行命令</p><h2 id="2-10-grep"><a href="#2-10-grep" class="headerlink" title="2.10 grep"></a>2.10 grep</h2><p>grep 要查找的字符串 要查找的文件  –color  &#x3D;&#x3D;&#x3D;&gt;color表示高亮显示</p><h2 id="2-11-ps-ef-x2F-ps-aux"><a href="#2-11-ps-ef-x2F-ps-aux" class="headerlink" title="2.11 ps -ef&#x2F;ps -aux"></a>2.11 ps -ef&#x2F;ps -aux</h2><p>查看当前系统正在运行的进程</p><p>通常结合grep 进行查看</p><p>eg : ps -ef |grep redis</p><h2 id="2-12-kill"><a href="#2-12-kill" class="headerlink" title="2.12 kill"></a>2.12 kill</h2><p>kill -9 进程的pid  &#x3D;&#x3D;&#x3D;&gt;杀死进程  -9表示强制终止</p><p>一般先ps查找进程的pid</p><h2 id="2-13-export"><a href="#2-13-export" class="headerlink" title="2.13 export"></a>2.13 export</h2><p>输出当前系统定义的所有环境变量</p><p>env 命令也可以列出所有的环境变量</p><p>echo输出指定环境的值</p><h1 id="三、文件的查看与查找"><a href="#三、文件的查看与查找" class="headerlink" title="三、文件的查看与查找"></a>三、文件的查看与查找</h1><h2 id="3-1-查看"><a href="#3-1-查看" class="headerlink" title="3.1 查看"></a>3.1 查看</h2><h3 id="3-1-1-cat"><a href="#3-1-1-cat" class="headerlink" title="3.1.1 cat"></a>3.1.1 cat</h3><p>查看短文本的内容</p><p>[root@localhost project]# cat 1.txt        查看1.txt的内容</p><h3 id="3-1-2-more"><a href="#3-1-2-more" class="headerlink" title="3.1.2 more"></a>3.1.2 <strong>more</strong></h3><p>[root@localhost ~]# more anaconda-ks.cfg      查看文件，展示一屏，而后可以用回车或空格换页。</p><h3 id="3-1-3-head"><a href="#3-1-3-head" class="headerlink" title="3.1.3 head"></a>3.1.3 head</h3><p>[root@localhost ~]# head -n 3 anaconda-ks.cfg     查看anaconda-ks.cfg文件的前3行</p><h3 id="3-1-4-tail"><a href="#3-1-4-tail" class="headerlink" title="3.1.4  tail"></a>3.1.4  tail</h3><p>[root@localhost ~]# tail -n 3 anaconda-ks.cfg        查看anaconda-ks.cfg文件的最后3行</p><h2 id="3-2-查找"><a href="#3-2-查找" class="headerlink" title="3.2 查找"></a>3.2 查找</h2><h3 id="3-2-1-grep"><a href="#3-2-1-grep" class="headerlink" title="3.2.1 grep"></a>3.2.1 grep</h3><p>查找信息中的关键内容</p><p>[root@localhost project]# grep ‘hi’ 1.txt             在1.txt中查找hi所在的行</p><p>[root@localhost project]# cat 1.txt | grep ‘hi’                  同上</p><h3 id="3-2-2-find"><a href="#3-2-2-find" class="headerlink" title="3.2.2 find"></a>3.2.2 find</h3><p>[root@localhost ~]# find . -name ‘ana*’                小数点代表当前目录，也可以写成其他目录</p><h3 id="3-2-3-whereis"><a href="#3-2-3-whereis" class="headerlink" title="3.2.3  whereis"></a>3.2.3  whereis</h3><p>专门用于查找二进制的文件或帮助文档</p><p>[root@localhost ~]# whereis ls 查看ls命令所在的目录</p><h1 id="四、压缩与解压缩"><a href="#四、压缩与解压缩" class="headerlink" title="四、压缩与解压缩"></a>四、压缩与解压缩</h1><p>命令：tar</p><p>选项：</p><ul><li>-c 产生打包文件 </li><li>-x 解压文件</li><li>-v 显示压缩或解压缩的详细信息</li><li>-f 指定压缩或解压缩的文件名</li><li>-z或-j 指定压缩方式，一种是gzip (-z) , 另一种bzip (-j)</li><li>-t 查看压缩包内容</li></ul><p>例子：</p><p>1、压缩</p><p>tar -czvf xxx.tar.gz 1.txt        &#x3D;&#x3D;&#x3D;&gt;将文件1.txt 压缩为名字为 xxx.tar.gz的压缩包</p><p>2、查看压缩包内容</p><p>tar -tzvf text.tar.gz</p><p>3、解压压缩包</p><p>tar -xzvf text.tar.gz -C ~    &#x3D;&#x3D;&#x3D;&#x3D;&gt;~C 后面写解压的文件路径</p><h1 id="五、用户与用户组（基本组-附加组）"><a href="#五、用户与用户组（基本组-附加组）" class="headerlink" title="五、用户与用户组（基本组+附加组）"></a>五、用户与用户组（基本组+附加组）</h1><p>若要使用系统资源，首先 需要管理员创建一个账号，在登录时输入正确的账号和密码后，能进入系统中自己的家目录。</p><h2 id="5-1-用户操作"><a href="#5-1-用户操作" class="headerlink" title="5.1 用户操作"></a>5.1 用户操作</h2><h3 id="5-1-1-创建用户"><a href="#5-1-1-创建用户" class="headerlink" title="5.1.1 创建用户"></a>5.1.1 创建用户</h3><p>在系统中创建新账号，并分配用户id、用户组、家目录。</p><p>格式： useradd [选项] 用户名</p><p>选项：</p><p>-d 用于指定家目录</p><p>-g 用于指定基本组</p><p>-G 用于指定附加组</p><p>例： 创建t1用户</p><p>useradd t1 &#x3D;&#x3D;&#x3D;&gt; 设定密码后可以激活账号&#x3D;&#x3D;&#x3D;》此时，用户组是t1，家目录在home下( id t1 查 </p><p>看)</p><p>例：创建t2用户，要求家目录在&#x2F;home&#x2F;xinguan，用户组是t1useradd -d &#x2F;home&#x2F;xinguan -g t1 t2 </p><h3 id="5-1-2-设置口令（密码）"><a href="#5-1-2-设置口令（密码）" class="headerlink" title="5.1.2 设置口令（密码）"></a>5.1.2 设置口令（密码）</h3><p>所有用户一定要设定密码，即便是空密码</p><p>passwd 用户名</p><h3 id="5-1-3-修改用户"><a href="#5-1-3-修改用户" class="headerlink" title="5.1.3  修改用户"></a>5.1.3  修改用户</h3><p>usermod [选项] 用户名</p><p>选项和创建用户时一致</p><p>例：修改t2用户，让t2的基本组变成root组 </p><p>usermod -g root t2 </p><h3 id="5-1-4-删除用户"><a href="#5-1-4-删除用户" class="headerlink" title="5.1.4 删除用户"></a>5.1.4 删除用户</h3><p>userdel -rf 用户名</p><p>-r ：删除家目录 -f：强制删除</p><h3 id="5-1-5-切换用户"><a href="#5-1-5-切换用户" class="headerlink" title="5.1.5 切换用户"></a>5.1.5 切换用户</h3><p>su -l 用户名</p><p>选项-l ： 作用是切换环境，加了-l的，如同重新login，不仅环境变量，且工作目录等都会改变。</p><h2 id="5-2-组操作"><a href="#5-2-组操作" class="headerlink" title="5.2 组操作"></a>5.2 组操作</h2><h3 id="5-2-1-增加组"><a href="#5-2-1-增加组" class="headerlink" title="5.2.1 增加组"></a>5.2.1 增加组</h3><p>groupadd 用户组名</p><p>例：创建big组 groupadd big </p><h3 id="5-2-2-修改组"><a href="#5-2-2-修改组" class="headerlink" title="5.2.2 修改组"></a>5.2.2 修改组</h3><p>groupmod [选项] 用户组名</p><p>-g 指定新组的id </p><p>-n 指定新名</p><p>例： 修改big组，把id改为1008，名字改为big2 </p><p>groupmod -g 1008 -n big2 big </p><h3 id="5-2-3-删除组"><a href="#5-2-3-删除组" class="headerlink" title="5.2.3 删除组"></a>5.2.3 删除组</h3><p>groupdel big2 :删除big2组</p><h1 id="六、文件权限"><a href="#六、文件权限" class="headerlink" title="六、文件权限"></a>六、文件权限</h1><h2 id="6-1-查看文件权限"><a href="#6-1-查看文件权限" class="headerlink" title="6.1 查看文件权限"></a>6.1 查看文件权限</h2><h3 id="6-1-1-查看"><a href="#6-1-1-查看" class="headerlink" title="6.1.1 查看"></a>6.1.1 查看</h3><p>ls -l 文件名</p><p>ls -ld 目录名</p><h3 id="6-1-2-含义"><a href="#6-1-2-含义" class="headerlink" title="6.1.2 含义"></a>6.1.2 含义</h3><p>文件：</p><p>r ： 代表可读</p><p>w： 代表可写</p><p>x： 代表可执行</p><p>目录：</p><p>r： 可以列出目录下的文件信息</p><p>w：可以增加、删除目录下的文件</p><p>x： 可以进入目录，可以cd进去</p><p>例：1.txt的文件权限如下</p><p>rwx rw- r–： 共有9个字符，每3个一组，第一组代表所属用户的权限、第二组代表所属组的权限、第三组代表其他用户的权限。</p><h2 id="6-2-修改权限"><a href="#6-2-修改权限" class="headerlink" title="6.2 修改权限"></a>6.2 修改权限</h2><h3 id="6-2-1-数字表示法"><a href="#6-2-1-数字表示法" class="headerlink" title="6.2.1 数字表示法"></a>6.2.1 数字表示法</h3><p>规则： r 当做4 ，w当做2 ，x当做1</p><p>例：把1.txt的权限修改为 rw-rw-r– chmod 664 1.txt </p><h3 id="6-2-2-表达式法"><a href="#6-2-2-表达式法" class="headerlink" title="6.2.2 表达式法"></a>6.2.2 表达式法</h3><p>chmod u&#x2F;g&#x2F;o&#x2F;a +&#x2F;- rwx 文件名</p><p>用户可读：chmod u+r 1.txt</p><p>组可写：chmod g+w 1.txt</p><p>所有用户可读:chmod a + r 1.txt</p><p>其他用户不可读：chmod o-r 1.txt </p><h3 id="6-2-3-文件所有者和所属组的更改"><a href="#6-2-3-文件所有者和所属组的更改" class="headerlink" title="6.2.3 文件所有者和所属组的更改"></a>6.2.3 文件所有者和所属组的更改</h3><p>更换所有者： chown 新所有者 文件名</p><p>更换所属组： chgrp 新组名 文件名</p><p>案例1： 以root用户在家目录下创建文件x.txt , 授权其他用户的权限为rwx，其他用户，如t1，是否可以访问该文件。</p><p>访问不到，其他用户无法访问&#x2F;root文件夹</p><p>解决方案：可以把其他用户t1 设置附加组为root，即可访问&#x2F;root文件夹</p><p>案例2： root创建&#x2F;mnt&#x2F;1.txt,修改组权限为可写。切换到t2，是否可写。</p><p>不可。 因为t2属于其他用户，无写权限。</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git</title>
      <link href="/lzl/69c3279c.html"/>
      <url>/lzl/69c3279c.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="一、什么是git"><a href="#一、什么是git" class="headerlink" title="一、什么是git"></a>一、什么是git</h1><p>Git 是一个免费的、开源的分布式版本控制系统，可以快速高效地处理从小型到大型的各种项目。</p><h1 id="二、什么是版本控制"><a href="#二、什么是版本控制" class="headerlink" title="二、什么是版本控制"></a>二、什么是版本控制</h1><p>版本控制是一种记录文件内容变化，以便将来查阅特定版本修订情况的系统。</p><p>版本控制其实最重要的是可以记录文件修改历史记录，从而让用户能够查看历史版本，方便版本切换。</p><h1 id="三、git工作机制"><a href="#三、git工作机制" class="headerlink" title="三、git工作机制"></a>三、git工作机制</h1><p>工作区  git add 暂存区（临时存储） git commit 本地库（历史版本）</p><h1 id="四、git常用命令"><a href="#四、git常用命令" class="headerlink" title="四、git常用命令"></a>四、git常用命令</h1><table><thead><tr><th>命令</th><th>作用</th></tr></thead><tbody><tr><td>git config –global  用户名</td><td>设置用户签名</td></tr><tr><td>git config –global邮箱</td><td>设置用户签名</td></tr><tr><td>git init</td><td>初始化本地库</td></tr><tr><td>git status</td><td>查看本地库状态</td></tr><tr><td>git add  文件名</td><td>添加到暂存区</td></tr><tr><td>git commit -m “日志信息” 文件名</td><td>提交到本地库</td></tr><tr><td>git reflog</td><td>查看精简历史记录</td></tr><tr><td>git flog</td><td>查看完整的历史记录</td></tr><tr><td>git reset –hard 版本号</td><td>版本穿梭 （选择版本）</td></tr></tbody></table><h1 id="五、分支"><a href="#五、分支" class="headerlink" title="五、分支"></a>五、分支</h1><h2 id="5-1-什么是分支"><a href="#5-1-什么是分支" class="headerlink" title="5.1 什么是分支"></a>5.1 什么是分支</h2><p>相当于副本，开发自己的分支时，不影响主线的使用。</p><h2 id="5-2-分支的命令"><a href="#5-2-分支的命令" class="headerlink" title="5.2 分支的命令"></a>5.2 分支的命令</h2><table><thead><tr><th>命令</th><th>作用</th></tr></thead><tbody><tr><td>git branch 分支名</td><td>创建分支</td></tr><tr><td>git branch -v</td><td>查看分支</td></tr><tr><td>git checkout 分支名</td><td>切换分支</td></tr><tr><td>git merge 分支名</td><td>将指定的分支合并到当前分支</td></tr></tbody></table><h2 id="5-3-合并冲突"><a href="#5-3-合并冲突" class="headerlink" title="5.3 合并冲突"></a>5.3 合并冲突</h2><p>产生冲突会出现状态为merging</p><p>这时需要人为进行决定</p><h1 id="6-Github"><a href="#6-Github" class="headerlink" title="6.Github"></a>6.Github</h1><table><thead><tr><th>命令</th><th>作用</th></tr></thead><tbody><tr><td>git remote -v</td><td>查看当前所有远程地址别名</td></tr><tr><td>git remote add 别名 远程地址</td><td>起别名</td></tr><tr><td>git push 别名 分支</td><td>推送本地分支上的内容到远程仓库</td></tr><tr><td>git clone 远程地址</td><td>将远程仓库的内容克隆到本地</td></tr><tr><td>git pull 远程库地址别名 远程分支名</td><td>将远程仓库对于分支最新内容拉下来后与当前本地分支直接合并</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>测试</title>
      <link href="/lzl/9daba997.html"/>
      <url>/lzl/9daba997.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="https://img.ynistt.top/footerbg.jpg"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">canvas_ribbon:</span><br><span class="line">  enable: false</span><br><span class="line">  size: 150</span><br><span class="line">  alpha: 0.6</span><br><span class="line">  zIndex: -1</span><br><span class="line">  click_to_change: false</span><br><span class="line">  mobile: false</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;button @click=&quot;send&quot;&gt;点我发送请求&lt;/button&gt;</span><br><span class="line">    &#123;&#123;msg&#125;&#125;</span><br><span class="line"></span><br><span class="line">    &lt;div&gt;</span><br><span class="line">        &lt;form :model=&quot;user&quot;&gt;</span><br><span class="line">        用户名:&lt;input type=&quot;text&quot; name=&quot;username&quot; v-model=&quot;user.username&quot;&gt;&lt;br&gt;</span><br><span class="line">        密码:&lt;input type=&quot;password&quot; name=&quot;password&quot; v-model=&quot;user.password&quot;&gt;&lt;br&gt;</span><br><span class="line">        &lt;button @click=&quot;login()&quot;&gt;登陆&lt;/button&gt;</span><br><span class="line">        &lt;/form&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">    name:&#x27;login&#x27;,</span><br><span class="line">    data() &#123;</span><br><span class="line">        return &#123;</span><br><span class="line">            msg:[],</span><br><span class="line">            user:&#123;</span><br><span class="line">                username:&#x27;&#x27;,</span><br><span class="line">                password:&#x27;&#x27;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">       send()&#123;</span><br><span class="line">        this.axios.get(`/api/list`).then(</span><br><span class="line">            res =&gt;&#123;</span><br><span class="line">                console.log(&#x27;请求成功&#x27;)</span><br><span class="line">                this.msg = res.data.data</span><br><span class="line">                console.log(this)</span><br><span class="line">            &#125;,</span><br><span class="line">            error =&gt;&#123;</span><br><span class="line">                console.log(&#x27;请求失败&#x27;)</span><br><span class="line">            &#125;</span><br><span class="line">        )</span><br><span class="line">       &#125;,</span><br><span class="line">       login()&#123;</span><br><span class="line">        console.log(&quot;登陆请求中&quot;)</span><br><span class="line">            let param = new URLSearchParams();</span><br><span class="line">            param.append(&quot;username&quot;, this.user.username);</span><br><span class="line">            param.append(&quot;password&quot;, this.user.password);</span><br><span class="line">            console.log(param)</span><br><span class="line">            this.axios.post(&quot;/api/login&quot;,param).then((&#123;res&#125;)=&gt; &#123;</span><br><span class="line">                if(res.data)&#123;</span><br><span class="line">                    console.log(&quot;登陆成功&quot;)</span><br><span class="line">                &#125;else&#123;</span><br><span class="line">                      console.log(&quot;失败&quot;)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            );</span><br><span class="line">       &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">Dog</span> <span class="variable">dog</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Dog</span>();</span><br><span class="line">        System.out.println(dog);<span class="comment">//com.xiaoqiang.Dog@1540e19d</span></span><br><span class="line"></span><br><span class="line">        com.xiaoming.<span class="type">Dog</span> <span class="variable">dog1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">com</span>.xiaoming.Dog();</span><br><span class="line">        System.out.println(dog1);<span class="comment">//com.xiaoming.Dog@677327b6</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        System.out.println(Math.abs(-<span class="number">1</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">Dog</span> <span class="variable">dog</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Dog</span>();</span><br><span class="line">        System.out.println(dog);</span><br><span class="line">        com.xiaoming.<span class="type">Dog</span> <span class="variable">dog1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">com</span>.xiaoming.Dog();</span><br><span class="line">        System.out.println(dog1);</span><br><span class="line">        System.out.println(Math.abs(-<span class="number">1</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;button @click=&quot;send&quot;&gt;点我发送请求&lt;/button&gt;</span><br><span class="line">    &#123;&#123;msg&#125;&#125;</span><br><span class="line"></span><br><span class="line">    &lt;div&gt;</span><br><span class="line">        &lt;form :model=&quot;user&quot;&gt;</span><br><span class="line">        用户名:&lt;input type=&quot;text&quot; name=&quot;username&quot; v-model=&quot;user.username&quot;&gt;&lt;br&gt;</span><br><span class="line">        密码:&lt;input type=&quot;password&quot; name=&quot;password&quot; v-model=&quot;user.password&quot;&gt;&lt;br&gt;</span><br><span class="line">        &lt;button @click=&quot;login()&quot;&gt;登陆&lt;/button&gt;</span><br><span class="line">        &lt;/form&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">    name:&#x27;login&#x27;,</span><br><span class="line">    data() &#123;</span><br><span class="line">        return &#123;</span><br><span class="line">            msg:[],</span><br><span class="line">            user:&#123;</span><br><span class="line">                username:&#x27;&#x27;,</span><br><span class="line">                password:&#x27;&#x27;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">       send()&#123;</span><br><span class="line">        this.axios.get(`/api/list`).then(</span><br><span class="line">            res =&gt;&#123;</span><br><span class="line">                console.log(&#x27;请求成功&#x27;)</span><br><span class="line">                this.msg = res.data.data</span><br><span class="line">                console.log(this)</span><br><span class="line">            &#125;,</span><br><span class="line">            error =&gt;&#123;</span><br><span class="line">                console.log(&#x27;请求失败&#x27;)</span><br><span class="line">            &#125;</span><br><span class="line">        )</span><br><span class="line">       &#125;,</span><br><span class="line">       login()&#123;</span><br><span class="line">        console.log(&quot;登陆请求中&quot;)</span><br><span class="line">            let param = new URLSearchParams();</span><br><span class="line">            param.append(&quot;username&quot;, this.user.username);</span><br><span class="line">            param.append(&quot;password&quot;, this.user.password);</span><br><span class="line">            console.log(param)</span><br><span class="line">            this.axios.post(&quot;/api/login&quot;,param).then((&#123;res&#125;)=&gt; &#123;</span><br><span class="line">                if(res.data)&#123;</span><br><span class="line">                    console.log(&quot;登陆成功&quot;)</span><br><span class="line">                &#125;else&#123;</span><br><span class="line">                      console.log(&quot;失败&quot;)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            );</span><br><span class="line">       &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;button @click=&quot;send&quot;&gt;点我发送请求&lt;/button&gt;</span><br><span class="line">    &#123;&#123;msg&#125;&#125;</span><br><span class="line"></span><br><span class="line">    &lt;div&gt;</span><br><span class="line">        &lt;form :model=&quot;user&quot;&gt;</span><br><span class="line">        用户名:&lt;input type=&quot;text&quot; name=&quot;username&quot; v-model=&quot;user.username&quot;&gt;&lt;br&gt;</span><br><span class="line">        密码:&lt;input type=&quot;password&quot; name=&quot;password&quot; v-model=&quot;user.password&quot;&gt;&lt;br&gt;</span><br><span class="line">        &lt;button @click=&quot;login()&quot;&gt;登陆&lt;/button&gt;</span><br><span class="line">        &lt;/form&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">    name:&#x27;login&#x27;,</span><br><span class="line">    data() &#123;</span><br><span class="line">        return &#123;</span><br><span class="line">            msg:[],</span><br><span class="line">            user:&#123;</span><br><span class="line">                username:&#x27;&#x27;,</span><br><span class="line">                password:&#x27;&#x27;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">       send()&#123;</span><br><span class="line">        this.axios.get(`/api/list`).then(</span><br><span class="line">            res =&gt;&#123;</span><br><span class="line">                console.log(&#x27;请求成功&#x27;)</span><br><span class="line">                this.msg = res.data.data</span><br><span class="line">                console.log(this)</span><br><span class="line">            &#125;,</span><br><span class="line">            error =&gt;&#123;</span><br><span class="line">                console.log(&#x27;请求失败&#x27;)</span><br><span class="line">            &#125;</span><br><span class="line">        )</span><br><span class="line">       &#125;,</span><br><span class="line">       login()&#123;</span><br><span class="line">        console.log(&quot;登陆请求中&quot;)</span><br><span class="line">            let param = new URLSearchParams();</span><br><span class="line">            param.append(&quot;username&quot;, this.user.username);</span><br><span class="line">            param.append(&quot;password&quot;, this.user.password);</span><br><span class="line">            console.log(param)</span><br><span class="line">            this.axios.post(&quot;/api/login&quot;,param).then((&#123;res&#125;)=&gt; &#123;</span><br><span class="line">                if(res.data)&#123;</span><br><span class="line">                    console.log(&quot;登陆成功&quot;)</span><br><span class="line">                &#125;else&#123;</span><br><span class="line">                      console.log(&quot;失败&quot;)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            );</span><br><span class="line">       &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;button @click=&quot;send&quot;&gt;点我发送请求&lt;/button&gt;</span><br><span class="line">    &#123;&#123;msg&#125;&#125;</span><br><span class="line"></span><br><span class="line">    &lt;div&gt;</span><br><span class="line">        &lt;form :model=&quot;user&quot;&gt;</span><br><span class="line">        用户名:&lt;input type=&quot;text&quot; name=&quot;username&quot; v-model=&quot;user.username&quot;&gt;&lt;br&gt;</span><br><span class="line">        密码:&lt;input type=&quot;password&quot; name=&quot;password&quot; v-model=&quot;user.password&quot;&gt;&lt;br&gt;</span><br><span class="line">        &lt;button @click=&quot;login()&quot;&gt;登陆&lt;/button&gt;</span><br><span class="line">        &lt;/form&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">    name:&#x27;login&#x27;,</span><br><span class="line">    data() &#123;</span><br><span class="line">        return &#123;</span><br><span class="line">            msg:[],</span><br><span class="line">            user:&#123;</span><br><span class="line">                username:&#x27;&#x27;,</span><br><span class="line">                password:&#x27;&#x27;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">       send()&#123;</span><br><span class="line">        this.axios.get(`/api/list`).then(</span><br><span class="line">            res =&gt;&#123;</span><br><span class="line">                console.log(&#x27;请求成功&#x27;)</span><br><span class="line">                this.msg = res.data.data</span><br><span class="line">                console.log(this)</span><br><span class="line">            &#125;,</span><br><span class="line">            error =&gt;&#123;</span><br><span class="line">                console.log(&#x27;请求失败&#x27;)</span><br><span class="line">            &#125;</span><br><span class="line">        )</span><br><span class="line">       &#125;,</span><br><span class="line">       login()&#123;</span><br><span class="line">        console.log(&quot;登陆请求中&quot;)</span><br><span class="line">            let param = new URLSearchParams();</span><br><span class="line">            param.append(&quot;username&quot;, this.user.username);</span><br><span class="line">            param.append(&quot;password&quot;, this.user.password);</span><br><span class="line">            console.log(param)</span><br><span class="line">            this.axios.post(&quot;/api/login&quot;,param).then((&#123;res&#125;)=&gt; &#123;</span><br><span class="line">                if(res.data)&#123;</span><br><span class="line">                    console.log(&quot;登陆成功&quot;)</span><br><span class="line">                &#125;else&#123;</span><br><span class="line">                      console.log(&quot;失败&quot;)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            );</span><br><span class="line">       &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hspedu.reflection;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.InvocationTargetException;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> 韩顺平</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> 1.0</span></span><br><span class="line"><span class="comment"> * 演示通过反射调用方法</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ReflecAccessMethod</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> ClassNotFoundException, NoSuchMethodException, IllegalAccessException, InstantiationException, InvocationTargetException &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//1. 得到Boss类对应的Class对象</span></span><br><span class="line">        Class&lt;?&gt; bossCls = Class.forName(<span class="string">&quot;com.hspedu.reflection.Boss&quot;</span>);</span><br><span class="line">        <span class="comment">//2. 创建对象</span></span><br><span class="line">        <span class="type">Object</span> <span class="variable">o</span> <span class="operator">=</span> bossCls.newInstance();</span><br><span class="line">        <span class="comment">//3. 调用public的hi方法</span></span><br><span class="line">        <span class="comment">//Method hi = bossCls.getMethod(&quot;hi&quot;, String.class);//OK</span></span><br><span class="line">        <span class="comment">//3.1 得到hi方法对象</span></span><br><span class="line">        <span class="type">Method</span> <span class="variable">hi</span> <span class="operator">=</span> bossCls.getDeclaredMethod(<span class="string">&quot;hi&quot;</span>, String.class);<span class="comment">//OK</span></span><br><span class="line">        <span class="comment">//3.2 调用</span></span><br><span class="line">        hi.invoke(o, <span class="string">&quot;韩顺平教育~&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//4. 调用private static 方法</span></span><br><span class="line">        <span class="comment">//4.1 得到 say 方法对象</span></span><br><span class="line">        <span class="type">Method</span> <span class="variable">say</span> <span class="operator">=</span> bossCls.getDeclaredMethod(<span class="string">&quot;say&quot;</span>, <span class="type">int</span>.class, String.class, <span class="type">char</span>.class);</span><br><span class="line">        <span class="comment">//4.2 因为say方法是private, 所以需要暴破，原理和前面讲的构造器和属性一样</span></span><br><span class="line">        say.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        System.out.println(say.invoke(o, <span class="number">100</span>, <span class="string">&quot;张三&quot;</span>, <span class="string">&#x27;男&#x27;</span>));</span><br><span class="line">        <span class="comment">//4.3 因为say方法是static的，还可以这样调用 ，可以传入null</span></span><br><span class="line">        System.out.println(say.invoke(<span class="literal">null</span>, <span class="number">200</span>, <span class="string">&quot;李四&quot;</span>, <span class="string">&#x27;女&#x27;</span>));</span><br><span class="line"></span><br><span class="line">        <span class="comment">//5. 在反射中，如果方法有返回值，统一返回Object , 但是他运行类型和方法定义的返回类型一致</span></span><br><span class="line">        <span class="type">Object</span> <span class="variable">reVal</span> <span class="operator">=</span> say.invoke(<span class="literal">null</span>, <span class="number">300</span>, <span class="string">&quot;王五&quot;</span>, <span class="string">&#x27;男&#x27;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;reVal 的运行类型=&quot;</span> + reVal.getClass());<span class="comment">//String</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//在演示一个返回的案例</span></span><br><span class="line">        <span class="type">Method</span> <span class="variable">m1</span> <span class="operator">=</span> bossCls.getDeclaredMethod(<span class="string">&quot;m1&quot;</span>);</span><br><span class="line">        <span class="type">Object</span> <span class="variable">reVal2</span> <span class="operator">=</span> m1.invoke(o);</span><br><span class="line">        System.out.println(<span class="string">&quot;reVal2的运行类型=&quot;</span> + reVal2.getClass());<span class="comment">//Monster</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Monster</span> &#123;&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Boss</span> &#123;<span class="comment">//类</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> age;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Boss</span><span class="params">()</span> &#123;<span class="comment">//构造器</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Monster <span class="title function_">m1</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Monster</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String <span class="title function_">say</span><span class="params">(<span class="type">int</span> n, String s, <span class="type">char</span> c)</span> &#123;<span class="comment">//静态方法</span></span><br><span class="line">        <span class="keyword">return</span> n + <span class="string">&quot; &quot;</span> + s + <span class="string">&quot; &quot;</span> + c;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">hi</span><span class="params">(String s)</span> &#123;<span class="comment">//普通public方法</span></span><br><span class="line">        System.out.println(<span class="string">&quot;hi &quot;</span> + s);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;div class=&quot;row&quot;&gt;</span><br><span class="line">      &lt;Banner/&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div class=&quot;row&quot;&gt;</span><br><span class="line">      &lt;div class=&quot;col-xs-2 col-xs-offset-2&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;list-group&quot;&gt;</span><br><span class="line">&lt;!-- 原始html中我们使用a标签实现页面的跳转 --&gt;</span><br><span class="line">          &lt;!-- &lt;a class=&quot;list-group-item active&quot; href=&quot;./about.html&quot;&gt;About&lt;/a&gt; --&gt;</span><br><span class="line">          &lt;!-- &lt;a class=&quot;list-group-item&quot; href=&quot;./home.html&quot;&gt;Home&lt;/a&gt; --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- Vue中借助router-link标签实现路由的切换 --&gt;</span><br><span class="line">          &lt;!-- active-class 选择哪个自动高亮显示 --&gt;</span><br><span class="line">&lt;router-link class=&quot;list-group-item&quot; active-class=&quot;active&quot; to=&quot;/about&quot;&gt;About&lt;/router-link&gt;</span><br><span class="line">          &lt;router-link class=&quot;list-group-item&quot; active-class=&quot;active&quot; to=&quot;/home&quot;&gt;Home&lt;/router-link&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;div class=&quot;col-xs-6&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;panel&quot;&gt;</span><br><span class="line">          &lt;div class=&quot;panel-body&quot;&gt;</span><br><span class="line">&lt;!-- 指定组件的呈现位置 --&gt;</span><br><span class="line">            &lt;router-view&gt;&lt;/router-view&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">  //引入普通组件</span><br><span class="line">import Banner from &#x27;./components/Banner&#x27;</span><br><span class="line">export default &#123;</span><br><span class="line">name:&#x27;App&#x27;,</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Markdown使用及语法</title>
      <link href="/lzl/532576ed.html"/>
      <url>/lzl/532576ed.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="1、Markdown-简介"><a href="#1、Markdown-简介" class="headerlink" title="1、Markdown 简介"></a>1、Markdown 简介</h1><p>Markdown 是一种可以使用普通文本编辑器编写的 <strong>标记语言</strong>，通过简单的 <strong>标记语法</strong>，它可以使普通文本内容具有一定的格式。</p><span id="more"></span><h1 id="2、-Markdown-语法"><a href="#2、-Markdown-语法" class="headerlink" title="2、 Markdown 语法"></a>2、 Markdown 语法</h1><h2 id="（1）标题"><a href="#（1）标题" class="headerlink" title="（1）标题"></a>（1）标题</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 一级标题</span><br><span class="line">## 二级标题</span><br><span class="line">### 三级标题</span><br><span class="line">#### 四级标题</span><br><span class="line">##### 五级标题</span><br><span class="line">###### 六级标题</span><br></pre></td></tr></table></figure><p><strong>Typora 快捷键：</strong></p><p>Ctrl+1：一级标题</p><p>Ctrl+2：二级标题</p><p>Ctrl+3：三级标题</p><p>Ctrl+4：四级标题</p><p>Ctrl+5：五级标题</p><p>Ctrl+6 ：六级标题</p><p>Ctrl+0：段落</p><h2 id="（2）粗体、斜体、删除线、下划线"><a href="#（2）粗体、斜体、删除线、下划线" class="headerlink" title="（2）粗体、斜体、删除线、下划线"></a>（2）粗体、斜体、删除线、下划线</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">*斜体*</span><br><span class="line">**粗体**</span><br><span class="line">***加粗斜体***</span><br><span class="line">~~删除线~~</span><br></pre></td></tr></table></figure><p><strong>Typora 快捷键：</strong></p><p>Ctrl+I：斜体</p><p>Ctrl+B：粗体</p><p>Ctrl+U：下划线</p><p>Alt+Shift+5：删除线</p><h2 id="（3）应用块"><a href="#（3）应用块" class="headerlink" title="（3）应用块"></a>（3）应用块</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; 文字引用</span><br></pre></td></tr></table></figure><p><strong>Typora 快捷键：</strong> Ctrl+Shift+Q</p><h2 id="（4）代码块"><a href="#（4）代码块" class="headerlink" title="（4）代码块"></a>（4）代码块</h2><p><strong>Typora 快捷键：</strong></p><p>行内代码：Ctrl+Shift+&#96;</p><p>多行代码：Ctrl+Shift+K</p><h2 id="（5）列表"><a href="#（5）列表" class="headerlink" title="（5）列表"></a>（5）列表</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">1. 有序列表项</span><br><span class="line"></span><br><span class="line">* 无序列表项</span><br><span class="line"></span><br><span class="line">+ 无序列表项</span><br><span class="line"></span><br><span class="line">- 无序列表项</span><br></pre></td></tr></table></figure><p><strong>Typora 快捷键：</strong></p><p>有序列表项：Ctrl+Shift+[</p><p>无序列表项：Ctrl+Shift+]</p><h2 id="（6）表格"><a href="#（6）表格" class="headerlink" title="（6）表格"></a>（6）表格</h2><p><strong>Typora 快捷键：</strong> Ctrl+T</p><h2 id="（7）超链接"><a href="#（7）超链接" class="headerlink" title="（7）超链接"></a>（7）超链接</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[链接文字](链接地址 &quot;链接描述&quot;)</span><br></pre></td></tr></table></figure><p><strong>Typora快捷键：</strong> Ctrl+K</p><h2 id="（8）图片"><a href="#（8）图片" class="headerlink" title="（8）图片"></a>（8）图片</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[图片文字](图片地址 &quot;图片描述&quot;)</span><br></pre></td></tr></table></figure><p><strong>Typora快捷键：</strong> Ctrl+Shift+I</p>]]></content>
      
      
      <categories>
          
          <category> Markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
